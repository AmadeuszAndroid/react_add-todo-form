{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","getTodos","userId","usersFromServer","find","initialFormValues","initialFormErrors","App","useState","setTodos","formValues","setFormValues","formErrors","setFormErrors","titleError","userIdError","handleChange","e","target","value","prevState","Number","action","method","onSubmit","preventDefault","formTitle","formUserId","u","newTodo","Math","max","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bb13088.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\nexport type UserProps = {\n  user: User\n};\n\nexport const UserInfo = ({ user: { email, name } }: UserProps) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { UserInfo } from '../UserInfo';\nimport { TodoUser } from '../../types/Todo';\n\ntype TodoProps = {\n  todo: TodoUser\n};\n\nexport const TodoInfo = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}: TodoProps) => (\n  <article\n    data-id={id}\n    className={`TodoInfo${completed ? ' TodoInfo--completed' : ''}`}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n\n    {user && <UserInfo user={user} />}\n  </article>\n);\n","import { TodoUser } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoListProps = {\n  todos: TodoUser[]\n};\n\nexport const TodoList = ({ todos }: TodoListProps) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n  </section>\n);\n","import { ChangeEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoUser } from './types/Todo';\n\nconst getTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId),\n}));\n\nconst initialFormValues = { title: '', userId: 0 };\nconst initialFormErrors = { title: false, userId: false };\n\ntype FormValues = { title: string; userId: number };\ntype FormErrors = { title: boolean; userId: boolean };\n\nexport const App = () => {\n  const [todos, setTodos] = useState<TodoUser[]>(getTodos);\n  const [formValues, setFormValues] = useState<FormValues>(initialFormValues);\n  const [formErrors, setFormErrors] = useState<FormErrors>(initialFormErrors);\n  const { title, userId } = formValues;\n  const { title: titleError, userId: userIdError } = formErrors;\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = e.target;\n\n    setFormErrors((prevState) => ({\n      ...prevState,\n      [name]: prevState[name as keyof FormErrors] ? !value : false,\n    }));\n\n    setFormValues((prevState) => ({\n      ...prevState,\n      [name]: name === 'title' ? value : Number(value),\n    }));\n  };\n\n  const getUser = (id: number) => {\n    return usersFromServer.find(u => u.id === id);\n  };\n\n  const getNewId = () => Math.max(...getTodos.map(todo => todo.id)) + 1;\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { title: formTitle, userId: formUserId } = formValues;\n\n    if (!formTitle || !formUserId) {\n      setFormErrors({\n        title: !formTitle,\n        userId: !formUserId,\n      });\n\n      return;\n    }\n\n    const user = getUser(formUserId);\n\n    const newTodo = {\n      id: getNewId(),\n      completed: false,\n      title: formTitle,\n      userId: user?.id,\n      user,\n    };\n\n    setTodos((prevState) => [...prevState, newTodo]);\n    setFormValues(initialFormValues);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            id=\"title\"\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={handleChange}\n          />\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">User: </label>\n\n          <select\n            id=\"userId\"\n            name=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleChange}\n          >\n            <option disabled value=\"0\">\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}